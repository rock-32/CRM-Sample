// <auto-generated />
using System;
using CRM_Sample.CRMContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM_Sample.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    partial class CrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM_Sample.Model.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Client_Id");

                    b.ToTable("BranchTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.CRMAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CRMAdminTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CampaignTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clientsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("clientsId");

                    b.ToTable("CampaignTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientsTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("branchId");

                    b.ToTable("DepartmentTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadSourceTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadStatusTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Leads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Department_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUpNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextFollowUp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source_Id")
                        .HasColumnType("int");

                    b.Property<int>("Staff_Id")
                        .HasColumnType("int");

                    b.Property<int?>("StaffsId")
                        .HasColumnType("int");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("StaffsId");

                    b.ToTable("LeadsTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lead_Id")
                        .HasColumnType("int");

                    b.Property<int>("leadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("leadId");

                    b.ToTable("LeadsHistoryTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Staffs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<int>("rolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("branchId");

                    b.HasIndex("rolesId");

                    b.ToTable("StaffsTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskItemTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Taskitem_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("taskItemId")
                        .HasColumnType("int");

                    b.Property<int>("usersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("taskItemId");

                    b.HasIndex("usersId");

                    b.ToTable("UserTaskTb");
                });

            modelBuilder.Entity("CRM_Sample.Model.Branch", b =>
                {
                    b.HasOne("CRM_Sample.Model.Clients", "clients")
                        .WithMany("branches")
                        .HasForeignKey("Client_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clients");
                });

            modelBuilder.Entity("CRM_Sample.Model.Campaign", b =>
                {
                    b.HasOne("CRM_Sample.Model.Clients", "clients")
                        .WithMany("campaigns")
                        .HasForeignKey("clientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clients");
                });

            modelBuilder.Entity("CRM_Sample.Model.Department", b =>
                {
                    b.HasOne("CRM_Sample.Model.Branch", "branch")
                        .WithMany("departments")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("CRM_Sample.Model.Leads", b =>
                {
                    b.HasOne("CRM_Sample.Model.Branch", null)
                        .WithMany("leads")
                        .HasForeignKey("BranchId");

                    b.HasOne("CRM_Sample.Model.Campaign", null)
                        .WithMany("leads")
                        .HasForeignKey("CampaignId");

                    b.HasOne("CRM_Sample.Model.Department", null)
                        .WithMany("leads")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("CRM_Sample.Model.LeadSource", null)
                        .WithMany("leads")
                        .HasForeignKey("LeadSourceId");

                    b.HasOne("CRM_Sample.Model.LeadStatus", null)
                        .WithMany("leads")
                        .HasForeignKey("LeadStatusId");

                    b.HasOne("CRM_Sample.Model.Staffs", null)
                        .WithMany("leads")
                        .HasForeignKey("StaffsId");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadsHistory", b =>
                {
                    b.HasOne("CRM_Sample.Model.Leads", "lead")
                        .WithMany()
                        .HasForeignKey("leadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lead");
                });

            modelBuilder.Entity("CRM_Sample.Model.Staffs", b =>
                {
                    b.HasOne("CRM_Sample.Model.Branch", "branch")
                        .WithMany("users")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_Sample.Model.Roles", "roles")
                        .WithMany("users")
                        .HasForeignKey("rolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("CRM_Sample.Model.UserTask", b =>
                {
                    b.HasOne("CRM_Sample.Model.TaskItem", "taskItem")
                        .WithMany("tasks")
                        .HasForeignKey("taskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_Sample.Model.Staffs", "users")
                        .WithMany("tasks")
                        .HasForeignKey("usersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("taskItem");

                    b.Navigation("users");
                });

            modelBuilder.Entity("CRM_Sample.Model.Branch", b =>
                {
                    b.Navigation("departments");

                    b.Navigation("leads");

                    b.Navigation("users");
                });

            modelBuilder.Entity("CRM_Sample.Model.Campaign", b =>
                {
                    b.Navigation("leads");
                });

            modelBuilder.Entity("CRM_Sample.Model.Clients", b =>
                {
                    b.Navigation("branches");

                    b.Navigation("campaigns");
                });

            modelBuilder.Entity("CRM_Sample.Model.Department", b =>
                {
                    b.Navigation("leads");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadSource", b =>
                {
                    b.Navigation("leads");
                });

            modelBuilder.Entity("CRM_Sample.Model.LeadStatus", b =>
                {
                    b.Navigation("leads");
                });

            modelBuilder.Entity("CRM_Sample.Model.Roles", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("CRM_Sample.Model.Staffs", b =>
                {
                    b.Navigation("leads");

                    b.Navigation("tasks");
                });

            modelBuilder.Entity("CRM_Sample.Model.TaskItem", b =>
                {
                    b.Navigation("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
